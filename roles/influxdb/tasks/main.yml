---
# tasks file for influxdb

# =============================================================================================================
# Install block
#
- name: Influxdb Present Block
  when: influxdb_state == 'present'
  block:
    # ............................................................
    # see if it is running...

    - name: Is influxdb runnin?
      no_log: "{{ mylab_nolog | default(true) }}"
      ansible.builtin.include_tasks:
        file: "../../shared/any/tasks/is-service-running.yml"
      vars:
        service_name: influxdb.service

    # ......................................................................................
    # ... only install it not running...

    - name: Install package and configure iff not running or forced
      when: service_running is false or influxdb_reload
      block:
        - name: Package install
          ansible.builtin.include_tasks:
            file: "../../shared/influxdb/tasks/{{ ansible_distribution }}-install.yml"
          vars:
            package: "{{ influx_pkgs[ansible_distribution] }}"

        - name: Debug package install results
          ansible.builtin.debug:
            var: pkg_install_result
            verbosity: 1

        ##################
        # Overide for now...may be a debian only issue

        - name: Override broken systemd file
          ansible.builtin.include_tasks: influxdb-setup-systemd.yml

        #########################################################
        # nfs mount for data if requested
        # must stop service as it keeps runtine stuff in there.

        - name: NFS for Influxdb
          when: influxdb_nfs | default(false)
          block:
            - name: Stop service if running
              ansible.builtin.systemd_service:
                name: influxdb
                state: stopped
              register: service_stop_result
              become: true

            - name: Wait for service to stop
              ansible.builtin.wait_for:
                timeout: 10
              when: service_stop_result.changed

            - name: Create the nfs mount directory
              when: mount_nfs_share
              ansible.builtin.file:
                path: "{{ influxdb_data_path }}"
                state: directory
                owner: influxdb
                group: influxdb
                mode: "0750"

            - name: Mount NFS data directory if required
              ansible.builtin.include_role:
                name: nfs-client

        ##################
        # Configure

        # - name: Check if configuration file exists
        #   stat:
        #     path: "{{ SEARCH_PATH }}/{{ SEARCH_FILE }}"
        #   register: result

        # .....................................................
        #  .... configure the node with NFS, default and configuration file
        #

        - name: Configure Influxdb block
          when: influxdb_configure
          block:
            - name: "Create /etc/influxd/ directory"
              ansible.builtin.file:
                path: /etc/influxdb
                state: directory
                owner: root
                group: root
                mode: "0755"
              become: true

            - name: "Template config for storage in /etc/influxd/"
              ansible.builtin.template:
                src: config.toml.j2
                dest: /etc/influxdb/config.toml
                owner: root
                group: root
                mode: "0644"
              become: true
              notify: Restart influxdb

            # SMELL this is required when we are using S3.
            # evaluate using "line in file"
            - name: "Template config for defaults in /etc/default/"
              ansible.builtin.template:
                src: etc-default-influxdb.j2
                dest: /etc/default/influxdb2
                owner: root
                group: root
                mode: "0644"
              become: true
              notify: Restart influxdb

    # TODO catch failures

    # ......................................................................................
    # This captures the failure just in case it already exists!!!!
    #

    - name: Initialize the new influxdb instance (note, must be running)
      block:
        - name: Ensure influxd is started
          ansible.builtin.systemd_service:
            name: influxdb
            state: started
          become: true

        - name: Wait for service to start (note, must be running)
          ansible.builtin.wait_for:
            port: 8086 # Replace with your service port
            state: started
            timeout: 300 # 5 minutes timeout
            delay: 10 # Initial delay before first check

        - name: Initialize the influx database (note, must be running)
          ansible.builtin.include_tasks: initializedb.yml

###################################################################################
#
#  Remove Block
#
- name: Remove the InfluxDB v2 service, configuration(if), data(if)
  when: influxdb_state == 'absent'
  block:
    # .................................................................
    - name: Package remove
      ansible.builtin.include_tasks:
        file: "../../shared/any/tasks/{{ ansible_distribution }}-rm.yml"
      vars:
        package: influxdb2
        service_name: influxd.service

    # .................................................................
    - name: Remove configuration files
      when: influxdb_delete_config
      block:
        - name: "Remove InfluxDB configuration files"
          ansible.builtin.file:
            path: "{{ item }}"
            state: absent
          become: true
          loop:
            - /etc/default/influxdb2
            - /etc/influxdb
            - /root/.influxdbv2
          register: file_cleanup
          ignore_errors: "{{ ansible_check_mode }}"
          failed_when:
            - file_cleanup.failed is defined
            - file_cleanup.failed and not ansible_check_mode

    # .................................................................
    - name: "Remove the data files in {{ influxdb_data_path }}"
      ansible.builtin.file:
        path: "{{ influxdb_data_path }}/{{ item }}"
        state: absent
      become: true
      when: influxdb_delete_data
      loop:
        - .cache
        - engine
        - influxd.bolt
        - influxd.sqlite
