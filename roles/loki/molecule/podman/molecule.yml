---
dependency:
  name: galaxy
  options:
    requirements-file: ${MOLECULE_EPHEMERAL_DIRECTORY}/podman/shared/requirements.yml
    ignore-errors: true

driver:
  name: podman
  options:
    managed: true
    platform_name: ${MOLECULE_PLATFORM_NAME:-all}

# these are the customized instances build by my test_containers repos.
# These should have a running systemd, prepared ssh, with enough tooling
# to get status.
#
# - I did not create the base image, only added layers.
#
platforms:
  - name: "uut-ct-d12"
    image: "geerlingguy/docker-debian12-ansible:latest"
    network: "monitoring-net"
    command: "/sbin/init"
    privileged: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    ssh_host: "127.0.0.1"
    ssh_port: 2223
    ssh_user: "jackaltx"
    connection: ssh

provisioner:
  name: ansible
  log: true
  # playbooks:
  #   prepare: "../shared/podman/prepare.yml"
  #   converge: "../shared/podman/converge.yml"
  #   verify: "../shared/verify/main.yml"
  config_options:
    defaults:
      roles_path: roles
      interpreter_python: auto_silent
      host_key_checking: false
  inventory:
    group_vars:
      all:
        project_root: "{{ lookup('env', 'MOLECULE_PROJECT_DIRECTORY') }}"
        report_root: "{{ lookup('env', 'MOLECULE_PROJECT_DIRECTORY') }}/verify_output"
        ansible_connection: ssh
        ansible_user: "jackaltx" # "${USER}"

        # SMELL hard coded for now
        # testing_capabilities: "{{ lookup('env', 'MOLECULE_CAPABILITIES', default='logs,metrics') | split(',') }}"

        # "metrics" capability
        influxdb_test: true
        influxdb_configure: true
        telgraf2influxdb_configs:
          {
            "localhost":
              {
                "url": "http://127.0.0.1",
                "token": "",
                "bucket": "telegraf",
                "org": "lavnet",
                "namedrop": ["influxdb_oss"],
                "bucket_tag": "",
                "exclude_bucket_tag": "",
                "ping_timeout": "0s",
                "read_idle_timeout": "0s",
                "insecure_skip_verify": false,
              },
          }

        # "logs" capability
        loki_local_storage: true
        alloy_loki_endpoint: "127.0.0.1"

scenario:
  name: podman
  test_sequence:
    - destroy
    - create
    - prepare
    - converge
    # - idempotence
    - verify
    - destroy

verifier:
  name: ansible
