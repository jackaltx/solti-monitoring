---
# Verify core functionality of log collection system
# Facts set by this task:
# - logs_verify_failed: boolean indicating if any verification check failed
# - logs_test_results: formatted string containing full test results and system status
#
- name: Verify logging system components
  block:
    #
    # ..........................................................................
    # Simple query test
    - name: Test log query functionality
      ansible.builtin.uri:
        url: "http://localhost:3100/loki/api/v1/query_range?query=%7Bjob%3D%22loki.source.journal.read%22%7D&start={{ (ansible_date_time.epoch | int - 300) }}000000000&end={{ ansible_date_time.epoch }}000000000&limit=5"
        method: GET
        body_format: json
        return_content: yes
        validate_certs: no
        status_code: 200
      register: query_check
      ignore_errors: true

    # ..........................................................................
    # Log level verification
    - name: Check recent logs for errors
      ansible.builtin.shell: |
        journalctl -u {{ item }} --since "5 minutes ago" -p err
      register: error_logs
      changed_when: false
      failed_when: false
      loop:
        - loki

    # ######################################################################
    # Reporting section
    #   - set facts
    #   - print log, if  verify_test_print: true
    #   - log fact to ES, if verify_es_log: true
    #   - Add notice to mattermost, if verify_mm_log: true
    # ..........................................................................
    #
    - name: Set logs_test_results fact
      no_log: "{{ molecule_nolog | default(true) }}"
      ansible.builtin.set_fact:
        logs_test_results: |
          === Loki Runtime Results ===
          Timestamp: {{ verify_timestamp }}

          Recent Service Logs:
          {{ error_logs.results[0].stdout_lines | default([]) | to_nice_yaml | indent(8) }}

          Recent Log Activity:
          {% set real_errors = [] %}
          {% for result in error_logs.results %}
            {% if result.stdout != "-- No entries --" %}
              {% set _ = real_errors.append(result) %}
            {% endif %}
          {% endfor %}
          {% if real_errors %}
          !!! ERRORS DETECTED IN LOGS !!!
          Error Entries:
          {% for error in real_errors %}
          Service: {{ error.item }}
          {{ error.stdout_lines | to_nice_yaml | indent(8) }}
          {% endfor %}
          {% else %}
          âœ“ No errors found in logs for services:
          {% for result in error_logs.results %}
            - {{ result.item }}
          {% endfor %}
          {% endif %}

    # .............................................................................................
    # Add to all_verify_results using task name as key
    - name: Add metrics results to dictionary
      set_fact:
        all_verify_results: "{{ all_verify_results | combine({'loki-verify-level1': logs_test_results}) }}"

    # ..............................................................................................
    - name: Set logs_verify_failed fact
      ansible.builtin.set_fact:
        logs_verify_failed: >-
          {{ 
            (query_check.failed | default(false))
          }}

    # Add to all_verify_results using task name as key
    - name: Add metrics results to dictionary
      set_fact:
        all_verify_failed: "{{ all_verify_failed | combine({'logs': logs_verify_failed}) }}"

    # .......................................................................
    # .......................................................................
    - name: Save Local block
      when: verify_test_print | default(true)
      block:
        #
        # ..........................................................................
        - name: Create local data directory for test results
          become: false
          delegate_to: localhost
          ansible.builtin.file:
            path: "{{ report_root }}/{{ ansible_distribution | lower }}"
            state: directory
            mode: "0755"

        # ..........................................................................
        - name: Save logs_test_results to file
          become: false
          delegate_to: localhost
          ansible.builtin.copy:
            content: "{{ logs_test_results }}"
            dest: "{{ report_root }}/{{ ansible_distribution | lower }}/log-collection-{{ ansible_date_time.epoch }}-1.yml"
            mode: "0644"

  # ......................................................................................................
  rescue:
    #
    - name: Record verification failure
      ansible.builtin.set_fact:
        logs_verify_failed: true

    - name: Log verification failure details
      become: false
      delegate_to: localhost
      ansible.builtin.copy:
        content: |
          verify_result: failed
          error: Unexpected failure during verification process
          timestamp: {{ verify_timestamp }}
          distribution: {{ ansible_distribution | lower }}
        dest: "{{ report_root }}/{{ ansible_distribution | lower }}/verify-logs-failure-{{ ansible_date_time.epoch }}-1.yml"
        mode: "0644"
