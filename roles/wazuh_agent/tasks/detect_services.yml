---
# TODO SMELL  remove this when after I know I don't need it.

# ================================================================================
# Add to tasks/detect_services.yml
- name: Read current ossec.conf if it exists
  command: cat {{ wazuh_config_file }}
  register: current_ossec_conf
  changed_when: false
  failed_when: false
  when: not ansible_check_mode and ossec_conf_stat.stat.exists | default(false)

- name: Analyze current configuration
  set_fact:
    current_config_analysis:
      syscheck_enabled: "{{ '<syscheck>' in current_ossec_conf.stdout | default('') and not '<disabled>yes</disabled>' in current_ossec_conf.stdout | default('') }}"
      rootcheck_enabled: "{{ '<rootcheck>' in current_ossec_conf.stdout | default('') and not '<disabled>yes</disabled>' in current_ossec_conf.stdout | default('') }}"
      # Add more analysis as needed
  when: current_ossec_conf is defined and current_ossec_conf.stdout is defined

- name: Display current configuration analysis
  debug:
    msg: "{{ current_config_analysis | to_nice_yaml }}"
  when: current_config_analysis is defined and wazuh_agent_state == "present"

# ================================================================================
# Detect services for automatic configuration

# Detect web servers
- name: Detect Apache web server
  shell: "{{ service_detection.apache }}"
  register: apache_check
  changed_when: false
  failed_when: false

- name: Detect Nginx web server
  shell: "{{ service_detection.nginx }}"
  register: nginx_check
  changed_when: false
  failed_when: false

# Detect database servers
- name: Detect MySQL/MariaDB
  shell: "{{ service_detection.mysql }}"
  register: mysql_check
  changed_when: false
  failed_when: false

- name: Detect PostgreSQL
  shell: "{{ service_detection.postgresql }}"
  register: postgresql_check
  changed_when: false
  failed_when: false

# Detect container environments
- name: Detect Podman
  shell: "{{ service_detection.podman }}"
  register: podman_check
  changed_when: false
  failed_when: false
  when: wazuh_container_monitoring.detect_podman | bool

- name: Detect Docker
  shell: "{{ service_detection.docker }}"
  register: docker_check
  changed_when: false
  failed_when: false
  when: wazuh_container_monitoring.detect_docker | bool

# ====================================================================================================================
# Set discovered service variables
- name: Set discovered service variables
  set_fact:
    discovered_services:
      web:
        apache: "{{ apache_check.rc == 0 }}"
        nginx: "{{ nginx_check.rc == 0 }}"
      database:
        mysql: "{{ mysql_check.rc == 0 }}"
        postgresql: "{{ postgresql_check.rc == 0 }}"
      containers:
        podman: "{{ podman_check.rc == 0 if wazuh_container_monitoring.detect_podman | bool else false }}"
        docker: "{{ docker_check.rc == 0 if wazuh_container_monitoring.detect_docker | bool else false }}"

# Set log monitoring recommendations based on discovered services
- name: Generate log monitoring recommendations
  set_fact:
    recommended_log_monitoring:
      web:
        apache_access: "{{ discovered_services.web.apache }}"
        apache_error: "{{ discovered_services.web.apache }}"
        nginx_access: "{{ discovered_services.web.nginx }}"
        nginx_error: "{{ discovered_services.web.nginx }}"
      database:
        mysql: "{{ discovered_services.database.mysql }}"
        postgresql: "{{ discovered_services.database.postgresql }}"

# If in 'present' mode, display recommendations
- name: Display service detection and recommendations
  debug:
    msg:
      - "Discovered services: {{ discovered_services | to_nice_yaml }}"
      - "Recommended log monitoring configuration: {{ recommended_log_monitoring | to_nice_yaml }}"
  when: wazuh_agent_state == "present"

# ====================================================================================================================
# Add container-specific syscheck exclusions if containers detected
- name: Add container paths to syscheck ignores
  set_fact:
    wazuh_security_modules: >
      {{ wazuh_security_modules | combine({
        'syscheck': {
          'ignore_paths': wazuh_security_modules.syscheck.ignore_paths + [
            '/var/lib/containers',
            '/var/lib/podman',
            '/var/lib/docker'
          ]
        }
      }, recursive=True) }}
  when: >
    (discovered_services.containers.podman or discovered_services.containers.docker) and
    wazuh_agent_state == "configure"

##############################
