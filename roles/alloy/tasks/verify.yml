---
# Verify core functionality of log collection system
# Facts set by this task:
# - logs_verify_failed: boolean indicating if any verification check failed
# - logs_test_results: formatted string containing full test results and system status
#
- name: Verify metrics system components
  block:
    #
    # ..........................................................................
    # Basic service checks
    - name: Check service statuses
      ansible.builtin.service_facts:

    - name: Verify Alloy service status
      ansible.builtin.assert:
        that:
          - "'alloy.service' in ansible_facts.services"
          - "ansible_facts.services['alloy.service'].state == 'running'"
          - "ansible_facts.services['alloy.service'].status == 'enabled'"
        fail_msg: "Alloy service is not running properly"
      register: alloy_service_check
      ignore_errors: true

    # ..........................................................................
    # Network connectivity checks
    #
    - name: Verify Alloy connection to Loki
      ansible.builtin.shell: "ss -tunp | grep ':3100.*alloy'"
      register: connection_check
      changed_when: false
      failed_when: false

    # ..........................................................................
    # Configuration checks
    #
    # - TBD
    #
    # ..........................................................................
    # Basic API health check
    #
    # - TBD
    #

    # .....................................................................
    # Get service versions for reporting
    - name: Get service versions
      block:
        - name: Get Loki version
          command: loki --version
          register: loki_version
          changed_when: false

        - name: Get Alloy version
          command: alloy --version
          register: alloy_version
          changed_when: false

    # ######################################################################
    # Reporting section
    #   - set facts
    #   - print log, if  verify_test_print: true
    #   - log fact to ES, if verify_es_log: true
    #   - Add notice to mattermost, if verify_mm_log: true
    # ..........................................................................

    # ..........................................................................
    # Create test results output
    - name: Set logs_test_results fact
      no_log: "{{ molecule_nolog | default(true) }}"
      ansible.builtin.set_fact:
        logs_test_results: |
          === Monitor Stack Integration Test Results ===
          Timestamp: {{ verify_timestamp }}

          Service Versions:
          - Alloy: {{ alloy_version.stdout }}

          Alloy Integration:
          - Connection Status: {{ 'Established' if not connection_check.failed else 'Not Connected' }}
          - Network Connections:
          {{ connection_check.stdout_lines | default([]) | to_nice_yaml | indent(8) }}

    # .............................................................................................
    # Add to all_verify_results using task name as key
    - name: Add metrics results to dictionary
      set_fact:
        all_verify_results: "{{ all_verify_results | combine({'alloy-verify-level0': logs_test_results}) }}"

    # ..........................................................................
    # Set verification status
    - name: Set logs_verify_failed fact
      ansible.builtin.set_fact:
        logs_verify_failed: >-
          {{ 
            (port_check.failed | default(false)) or 
            (loki_service_check.failed | default(false)) or 
            (alloy_service_check.failed | default(false)) or
            (api_check.failed | default(false))
          }}

    # Add to all_verify_results using task name as key
    - name: Add metrics results to dictionary
      set_fact:
        all_verify_failed: "{{ all_verify_failed | combine({'logs': logs_verify_failed}) }}"

    # .......................................................................
    # .......................................................................
    - name: Save Local block
      when: verify_test_print | default(true)
      block:
        #
        # ..........................................................................
        - name: Create local data directory for test results
          become: false
          delegate_to: localhost
          ansible.builtin.file:
            path: "{{ report_root }}/{{ ansible_distribution | lower }}"
            state: directory
            mode: "0755"

        # ..........................................................................
        - name: Save logs_test_results to file
          become: false
          delegate_to: localhost
          ansible.builtin.copy:
            content: "{{ logs_test_results }}"
            dest: "{{ report_root }}/{{ ansible_distribution | lower }}/log-collection-{{ ansible_date_time.epoch }}-1.yml"
            mode: "0644"

  # ......................................................................................................
  rescue:
    #
    - name: Record verification failure
      ansible.builtin.set_fact:
        logs_verify_failed: true

    - name: Log verification failure details
      become: false
      delegate_to: localhost
      ansible.builtin.copy:
        content: |
          verify_result: failed
          error: Unexpected failure during verification process
          timestamp: {{ verify_timestamp }}
          distribution: {{ ansible_distribution | lower }}
        dest: "{{ report_root }}/{{ ansible_distribution | lower }}/verify-logs-failure-{{ ansible_date_time.epoch }}-1.yml"
        mode: "0644"
